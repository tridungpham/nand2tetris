// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Nand(a=sel[2], b=sel[2], out=notSel2);
    //// Replace this comment with your code.
    DMux4Way(in=in, sel=sel[0..1], a= dm4a, b= dm4b, c=dm4c, d=dm4d);
    DMux4Way(in=in, sel=sel[0..1], a= dm4e, b= dm4f, c=dm4g, d=dm4h);

    And(a=notSel2, b=dm4a, out=a);
    And(a=notSel2, b=dm4b, out=b);
    And(a=notSel2, b=dm4c, out=c);
    And(a=notSel2, b=dm4d, out=d);

    And(a=sel[2], b=dm4e, out=e);
    And(a=sel[2], b=dm4f, out=f);
    And(a=sel[2], b=dm4g, out=g);
    And(a=sel[2], b=dm4h, out=h);
}
